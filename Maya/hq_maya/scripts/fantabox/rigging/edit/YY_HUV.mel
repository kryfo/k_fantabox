global proc YY_HUV(){
if(`window -q -ex YY_HUV_win`)
{
    deleteUI YY_HUV_win;
}
window 
	   -wh 180 290
	   -t "Poly点添加毛囊工具"
	   YY_HUV_win;
columnLayout -adj 1 -rs 5 ;
text -l "poly点添加毛囊工具";
separator;
checkBox -al "left" -l "添加骨骼点" YY_HUV_AddJoint_check;
button -h 30 -l "添加毛囊" -c YY_HUV_proc;
button -h 30 -l "选择所有毛囊节点" -c YY_HUV_Select_Follicle;
button -h 30 -l "隐藏选择毛囊节点" -c "YY_HUV_Vis_Sel_Foll \"0\"" ;
button -h 30 -l "显示选择毛囊节点" -c "YY_HUV_Vis_Sel_Foll \"1\"" ;
separator;
text -l "帮助";
text -l "选择POLY上要添加毛囊的点，\n点击\"添加毛囊\"按钮";
showWindow YY_HUV_win;
}
YY_HUV;

global proc YY_HUV_proc()
{
    string $YY_Hair_UV[] = `ls -sl -fl`;

    for($YY_i = 0;$YY_i<size($YY_Hair_UV);$YY_i++)
    {
//float $YY_HUV_point_postion[] = `pointPosition -w $YY_Hair_UV[$YY_i]`;	
        string $YY_HUV_tok[];
        string $YY_HUV_poly_name;
        string $YY_HUV_name = `tokenize $YY_Hair_UV[$YY_i] "." $YY_HUV_tok`;	
        $YY_HUV_poly_name = $YY_HUV_tok[0];	
        string $YY_HUV_poly_name_two[] = `listRelatives -s $YY_HUV_poly_name`;
        $YY_HUV_poly_name = $YY_HUV_poly_name_two[0];
        string $YY_HUV_returna[] = `polyListComponentConversion -fv -tuv $YY_Hair_UV[$YY_i]`;
//print ($YY_HUV_returna[0]+ "\n");
        float $YY_HUV_fl[] = `polyEditUV -q $YY_HUV_returna[0]`;	
//print ($YY_HUV_fl[0] + "\n" + $YY_HUV_fl[1] + "\n");	

        string $YY_HUV_follicle = `createNode "follicle" -n "Follicle_#"`;
        string $YY_HUV_par[] = `listRelatives -p $YY_HUV_follicle`;
        string $YY_HUV_pv = $YY_HUV_par[0];
        string $YY_HUV_p = `rename $YY_HUV_pv "Follicle_T_#"`;
//print $YY_HUV_follicle;
        connectAttr ($YY_HUV_poly_name + ".worldMatrix[0]") ($YY_HUV_follicle + ".inputWorldMatrix");
        connectAttr ($YY_HUV_poly_name + ".outMesh") ($YY_HUV_follicle + ".inputMesh");

        connectAttr -f ($YY_HUV_follicle + ".outTranslate") ($YY_HUV_p + ".translate");
        connectAttr -f ($YY_HUV_follicle + ".outRotate") ($YY_HUV_p + ".rotate");

        setAttr ($YY_HUV_follicle + ".parameterU") $YY_HUV_fl[0];
        setAttr ($YY_HUV_follicle + ".parameterV") $YY_HUV_fl[1];

//int $YY_HUV_po_int = `checkBox -q -v YY_HUV_AddJoint_check`;
        if(`checkBox -q -v YY_HUV_AddJoint_check`)
        {
            float $YY_HUV_point_postion[] = `pointPosition -w $YY_Hair_UV[$YY_i]`;		
            joint -p $YY_HUV_point_postion[0] $YY_HUV_point_postion[1] $YY_HUV_point_postion[2];
            select -cl;
        }
    }
}



global proc YY_HUV_Select_Follicle()
{

//select -r `listTransforms "-type follicle"`;

    select -r `ls -type follicle`;
}


global proc YY_HUV_Vis_Sel_Foll(int $YY_HUV_Vis_Int)
{
    string $YY_HUV_HSF[] = `ls -sl -dag -type "follicle"`;
    string $YY_HUV_HSF_For;
    for($YY_HUV_HSF_For in $YY_HUV_HSF)
    {
        setAttr ($YY_HUV_HSF_For + ".visibility") $YY_HUV_Vis_Int;	
    }


}
